apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.backend.configMapName }}
  namespace: {{ .Values.global.namespace }}
data:
  DB_PORT: "3306"
  DB_DATABASE: "pump_watch"
  DB_HOST: "pump-watch-database"
  DB_USERNAME: "root"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.flask.configMapName }}
  namespace: {{ .Values.global.namespace }}
data:
  FLASK_ENV: "production"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.frontend.configMapName }}
  namespace: {{ .Values.global.namespace }}
data:
  REACT_APP_NESTJS_API_URL: "http://pump-watch-backend.pump-watch.svc.cluster.local:3000"
  REACT_APP_FLASK_API_URL: "http://pump-watch-flask.pump-watch.svc.cluster.local:5000"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pump-watch-frontend-nginx-config
  namespace: {{ .Values.global.namespace }}
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      
      server {
          listen 80;
          server_name localhost;
          location / {
              root /usr/share/nginx/html;
              index index.html;
              try_files $uri /index.html;
          }
          location /api/ {
              proxy_pass http://pump-watch-backend.pump-watch.svc.cluster.local:3000/api/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
          location /flask-api/ {
              proxy_pass http://pump-watch-flask.pump-watch.svc.cluster.local:5000/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: {{ .Values.global.namespace }}
data:
  my.cnf: |
    [mysqld]
    bind-address = 0.0.0.0
    skip-name-resolve
    datadir=/var/lib/mysql
    socket=/var/run/mysqld/mysqld.sock
    secure-file-priv=/var/lib/mysql-files
    user=mysql
    pid-file=/var/run/mysqld/mysqld.pid
    !includedir /etc/mysql/conf.d/

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
  namespace: {{ .Values.global.namespace }}
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS pump_watch;
    USE pump_watch;
    -- Add any table creation or initial data scripts here
